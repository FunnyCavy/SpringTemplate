<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 日志转换规则 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %clr(%5p) %clr(${PID:- }){magenta} --- [%15.15t] ${LOG_CORRELATION_PATTERN:-}%clr(%-40.40logger{39}){cyan} : %m%n%wEx"/>
    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%t] ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n%wEx"/>

    <!-- 控制台输出 - 全部日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 文件输出 - INFO / WARN 级别日志 -->
    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <!-- 处理 INFO / WARN 级别日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <!-- 当天记录的日志文件名 -->
        <file>./logs/log-info.log</file>
        <!-- 日期滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 滚动文件名格式 -->
            <fileNamePattern>./logs/log-info-%d{yy-MM-dd}.log.gz</fileNamePattern>
            <!-- 保留一周内日志 -->
            <maxHistory>7</maxHistory>
            <!-- 限制日志文件总大小 -->
            <totalSizeCap>10MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 文件输出 - ERROR 级别日志 -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <!-- 处理 ERROR 级别日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <!-- 当天记录的日志文件名 -->
        <file>./logs/log-error.log</file>
        <!-- 日期滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 滚动文件名格式 -->
            <fileNamePattern>./logs/log-error-%d{yy-MM-dd}.log.gz</fileNamePattern>
            <!-- 保留一周内日志 -->
            <maxHistory>7</maxHistory>
            <!-- 限制日志文件总大小 -->
            <totalSizeCap>10MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 异步文件输出 - 引用 FILE_INFO -->
    <appender name="ASYNC_FILE_INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 异步日志队列大小 -->
        <queueSize>2048</queueSize>
        <!-- 当异步日志队列近满时, 丢弃低优先级日志 -->
        <discardingThreshold>90</discardingThreshold>
        <!-- 当异步日志队列已满时, 日志不阻塞主线程, 确保性能 -->
        <neverBlock>true</neverBlock>
        <appender-ref ref="FILE_INFO"/>
    </appender>

    <!-- 异步文件输出 - 引用 FILE_ERROR -->
    <appender name="ASYNC_FILE_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 异步日志队列大小 -->
        <queueSize>1024</queueSize>
        <!-- 异步日志队列不丢弃任何日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 当异步日志队列已满时, 日志将阻塞主线程, 确保不丢失 -->
        <neverBlock>false</neverBlock>
        <appender-ref ref="FILE_ERROR"/>
    </appender>

    <!-- 全局日志级别 -->
    <root level="INFO">
        <!-- 控制台输出 - 全部日志 -->
        <appender-ref ref="STDOUT"/>
        <!-- 异步文件输出 - INFO / WARN 级别日志 -->
        <appender-ref ref="ASYNC_FILE_INFO"/>
        <!-- 异步文件输出 - ERROR 级别日志 -->
        <appender-ref ref="ASYNC_FILE_ERROR"/>
    </root>
</configuration>
